// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model chats {
  id        String  @id @default(uuid()) @db.Uuid
  title     String?
  channelId String? @map("channel_id")
  callerId  String? @map("caller_id")

  messages  conversations[]
  createdAt DateTime        @default(now()) @map("created_at")
}

model conversations {
  id      String @id @default(uuid()) @db.Uuid
  userId  String @map("user_id")
  role    String
  content String @db.Text

  chatId String @map("chat_id") @db.Uuid
  chat   chats  @relation(fields: [chatId], references: [id])

  createdAt DateTime @default(now()) @map("created_at")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
